
import { useState } from 'react';
import { useToast } from '@/hooks/use-toast';

interface AIGeneratorProps {
  prompt: string;
  onGenerated: (code: string) => void;
}

const AIGenerator = ({ prompt, onGenerated }: AIGeneratorProps) => {
  const [isGenerating, setIsGenerating] = useState(false);
  const { toast } = useToast();

  const generateCode = async () => {
    setIsGenerating(true);
    
    try {
      // TODO: Replace with actual OpenAI API call when Supabase is connected
      const response = await simulateAIGeneration(prompt);
      onGenerated(response);
      
      toast({
        title: "Code Generated!",
        description: "Your application has been generated successfully.",
      });
    } catch (error) {
      toast({
        title: "Generation Error",
        description: "Failed to generate code. Please try again.",
        variant: "destructive",
      });
    } finally {
      setIsGenerating(false);
    }
  };

  // Simulate AI code generation
  const simulateAIGeneration = async (userPrompt: string): Promise<string> => {
    // Simulate API delay
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // Return template code based on prompt
    return `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generated by VibeCode</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: white;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.1);
            padding: 40px;
            border-radius: 20px;
            backdrop-filter: blur(10px);
        }
        h1 { font-size: 2.5em; margin-bottom: 20px; }
        p { font-size: 1.2em; line-height: 1.6; }
        .generated-for { 
            background: rgba(255, 255, 255, 0.2);
            padding: 15px;
            border-radius: 10px;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>ðŸš€ Generated by VibeCode AI</h1>
        <p>This application was generated based on your prompt:</p>
        <div class="generated-for">
            <strong>Your Request:</strong> ${userPrompt}
        </div>
        <p>This is a demo of the AI generation capability. In the full version, this would be a complete, functional application based on your specific requirements.</p>
    </div>
</body>
</html>`;
  };

  return {
    generateCode,
    isGenerating
  };
};

export default AIGenerator;
